version: "3.6"

# confluent 5.1.3 should have Scala 2.11.x and Java 1.8.x

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.3
    ports:
      - "2181:2181"
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:5.1.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
  kafka-cli:
    image: frser/kafka-cli
    environment:
      BOOTSTRAP_SERVER: kafka:29092
      CREATE_TOPICS: udacity.project.spark-streaming.police:1:1
    depends_on:
      - kafka
  consumer: &kafka-python
    build:
      context: ./
      dockerfile: ./kafka/Dockerfile
    command: python consumer.py
    environment:
      KAFKA_BROKER_URL: kafka:29092
    depends_on:
      - producer
  producer:
    <<: *kafka-python
    command: python producer.py
    volumes:
      - ./police-department-calls-for-service.json:/app/police-department-calls-for-service.json
    depends_on:
      - kafka-cli
  jupyter:
    image: jupyter/pyspark-notebook:414b5d749704
    ports:
      - "8888:8888"
      - "4040:4040"
    volumes:
      - ./apps:/home/jovyan/work/
      - ./data:/opt/spark-data
    depends_on:
      - producer
